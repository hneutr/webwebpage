[
    "from webweb import Web\n",
    "\n",
    "web = Web(\n",
    "    title='oroboros',\n",
    "    adjacency=[[0, 1], [1, 2], [2, 3]],\n",
    "    metadata={\n",
    "        'isHead' : {\n",
    "            'values' : [True, False, False, False],\n",
    "        }\n",
    "    }\n",
    ")\n",
    "\n",
    "# oroboros begins chompin'\n",
    "web.networks.oroboros.add_layer(\n",
    "    adjacency=[[0, 1], [1, 2], [2, 3], [3, 0]],\n",
    "    metadata={\n",
    "        'isHead' : {\n",
    "            'values' : [True, False, False, False],\n",
    "        }\n",
    "    }\n",
    ")\n",
    "\n",
    "web.networks.oroboros.add_layer(\n",
    "    adjacency=[[0, 1], [1, 2], [2, 0]],\n",
    "    metadata={\n",
    "        'isHead' : {\n",
    "            'values' : [True, False, False],\n",
    "        }\n",
    "    }\n",
    ")\n",
    "\n",
    "web.networks.oroboros.add_layer(\n",
    "    adjacency=[[0, 1], [1, 0]],\n",
    "    metadata={\n",
    "        'isHead' : {\n",
    "            'values' : [True, False],\n",
    "        }\n",
    "    }\n",
    ")\n",
    "\n",
    "# lame symbol for infinity if you ask me.\n",
    "web.networks.oroboros.add_layer(\n",
    "    adjacency=[],\n",
    "    metadata={\n",
    "        'isHead' : {\n",
    "            'values' : [True],\n",
    "        }\n",
    "    }\n",
    ")\n",
    "\n",
    "# display the first layer first (you could put, say, 1 here and it would display the second)\n",
    "web.display.networkLayer = 0\n",
    "\n",
    "# we'll compute node color by the `isHead` attribute\n",
    "web.display.colorBy = 'isHead'\n",
    "\n",
    "# we'll compute node size by the `isHead` attribute\n",
    "web.display.sizeBy = 'isHead'\n",
    "\n",
    "web.draw()"
]